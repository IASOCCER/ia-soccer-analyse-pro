import streamlit as st
import pandas as pd

st.set_page_config(page_title="IA Soccer Analyse Pro ‚Äì Conduite de Balle", layout="wide")
st.title("üèÉ IA Soccer ‚Äì Analyse de la Conduite de Balle")

# Distances approximatives des parcours
distance_map = {
    "Parcours Zig-Zag (6 plots en ligne, 2,5m entre chaque)": 15.0,
    "Parcours Courbe (3 courbes autour de 3 plots √©cart√©s de 4m)": 18.0
}

# Initialisation de la m√©moire
if "conduite_tests" not in st.session_state:
    st.session_state["conduite_tests"] = []

st.markdown("### üë®‚Äçüéì Informations sur le joueur")
nom = st.text_input("Nom du joueur")
age = st.number_input("√Çge", min_value=8, max_value=18)

st.markdown("### üöß D√©tails du test de conduite de balle")
parcours = st.selectbox("Type de parcours", list(distance_map.keys()))
temps_total = st.number_input("Temps total pour compl√©ter le parcours (en secondes)", min_value=1.0, max_value=30.0, step=0.1)

if st.button("‚ûï Ajouter ce test de conduite"):
    if nom and age:
        distance = distance_map.get(parcours, None)
        st.session_state["conduite_tests"].append({
            "Nom": nom,
            "√Çge": age,
            "Parcours": parcours,
            "Distance (m)": distance,
            "Temps (s)": temps_total
        })
        st.success("‚úÖ Test ajout√© avec succ√®s!")
    else:
        st.warning("Veuillez remplir toutes les informations pour ajouter le test.")

if st.session_state["conduite_tests"]:
    st.markdown("### üìä Tests enregistr√©s")
    df = pd.DataFrame(st.session_state["conduite_tests"])
    st.dataframe(df, use_container_width=True)

    if st.button("üìÑ G√©n√©rer le rapport final"):
        st.markdown(f"### üìå Rapport final pour {nom}, {age} ans")

        for parcours_type in df["Parcours"].unique():
            sous_df = df[df["Parcours"] == parcours_type]
            if not sous_df.empty:
                distance = distance_map.get(parcours_type, None)
                st.markdown(f"#### üèÉ {parcours_type} ‚Äì ~{distance} m")
                st.dataframe(sous_df[["Temps (s)", "Distance (m)"]])

                temps_moyen = sous_df["Temps (s)"].mean()
                vitesse = round(distance / temps_moyen, 2) if temps_moyen > 0 else 0

                st.markdown(f"- **Distance du parcours :** ~{distance} m")
                st.markdown(f"- **Temps moyen :** {temps_moyen:.2f} s")
                st.markdown(f"- **Vitesse moyenne :** {vitesse:.2f} m/s")

                # Analyse
                st.markdown("### üßê Analyse automatique")
                if parcours_type.startswith("Parcours Zig-Zag"):
                    if temps_moyen < 6:
                        st.markdown("- ‚úÖ **Conduite tr√®s rapide** ‚Äì excellent niveau technique.")
                    elif 6 <= temps_moyen <= 8:
                        st.markdown("- ‚ö†Ô∏è **Conduite correcte** ‚Äì potentiel d'am√©lioration.")
                    else:
                        st.markdown("- ‚ùå **Conduite lente** ‚Äì travailler sur l'explositivit√© et la pr√©cision.")
                else:
                    if temps_moyen < 8:
                        st.markdown("- ‚úÖ **Conduite rapide et fluide** ‚Äì tr√®s bon contr√¥le.")
                    elif 8 <= temps_moyen <= 10:
                        st.markdown("- ‚ö†Ô∏è **Conduite moyenne** ‚Äì travailler la r√©gularit√©.")
                    else:
                        st.markdown("- ‚ùå **Temps √©lev√©** ‚Äì manque de ma√Ætrise sous pression.")

                # Plan d'action
                st.markdown("### üåü Plan d'action recommand√©")
                if (parcours_type.startswith("Parcours Zig-Zag") and temps_moyen > 8) or (parcours_type.startswith("Parcours Courbe") and temps_moyen > 10):
                    st.markdown("""
#### üîµ Niveau Prioritaire ‚Äì Am√©lioration urgente

**Objectif :** Am√©liorer la vitesse et le contr√¥le en conduite.  
**Exercices :**
- Conduite rapide entre plots (15m)  
- Conduite avec changement de rythme  
- Duel 1v1 avec sortie rapide

**Fr√©quence :** 3x/semaine pendant 4 semaines  
**Objectif :** Atteindre < 7s (Zig-Zag) ou < 9s (Courbe)
                    """)
                elif temps_moyen <= 10:
                    st.markdown("""
#### üî∂ Niveau Mod√©r√© ‚Äì Consolidation

**Objectif :** Stabiliser la ma√Ætrise du ballon √† vitesse mod√©r√©e.  
**Exercices :**
- Conduite avec arr√™ts brusques  
- Variations de surface de contact (int√©rieur/ext√©rieur)  
- Petits jeux en espace r√©duit

**Fr√©quence :** 2x/semaine pendant 3 semaines  
**Objectif :** Maintien au-dessus du niveau cible
                    """)
                else:
                    st.markdown("""
#### üîπ Niveau Avanc√© ‚Äì Maintien

**Objectif :** Transfert de la conduite rapide vers les matchs.  
**Exercices :**
- Jeu r√©duit √† th√®me avec contrainte de temps  
- Encha√Ænement conduite + passe  
- Vid√©o feedback et correction technique

**Fr√©quence :** 1 session/semaine  
**Objectif :** Continuit√© de performance en match
                    """)

