import streamlit as st
import pandas as pd

st.set_page_config(page_title="IA Soccer ‚Äì Analyse Technique", layout="wide")
st.title("‚öΩ IA Soccer ‚Äì Analyse Technique des Joueurs")

menu = st.sidebar.selectbox("Choisir l'exercice", ["Test de Passe", "Conduite de Balle ‚Äì Zigzag", "Conduite de Balle ‚Äì Ligne Droite"])

if "tests" not in st.session_state:
    st.session_state["tests"] = []

st.markdown("### üßë‚Äçüéì Informations sur le joueur")
nom = st.text_input("Nom du joueur")
age = st.number_input("√Çge", min_value=8, max_value=18)

if menu == "Test de Passe":
    st.markdown("### üéØ D√©tails du test de passe")
    pied = st.selectbox("Pied utilis√©", ["Pied gauche", "Pied droit"])
    pression = st.selectbox("Niveau de pression", ["Faible (12s)", "Moyenne (6s)", "√âlev√©e (3s)"])
    nb_acertes = st.slider("Nombre de passes r√©ussies sur 6", 0, 6, 3)

    temps_reactions = []
    if nb_acertes > 0:
        st.markdown("Saisir les temps de r√©action (en secondes) pour chaque passe r√©ussie :")
        for i in range(1, nb_acertes + 1):
            t = st.number_input(f"Temps pour la passe {i}", min_value=0.0, max_value=15.0, step=0.1, key=f"passe_{i}")
            temps_reactions.append(t)

    if st.button("‚ûï Ajouter ce test"):
        if nom and age:
            precision = round((nb_acertes / 6) * 100, 1)
            temps_moyen = round(sum(temps_reactions) / len(temps_reactions), 2) if nb_acertes > 0 else 0.0

            st.session_state["tests"].append({
                "Exercice": "Passe",
                "Nom": nom,
                "√Çge": age,
                "Pied": pied,
                "Pression": pression,
                "Pr√©cision (%)": precision,
                "Temps moyen (s)": temps_moyen
            })
            st.success("‚úÖ Test ajout√© avec succ√®s!")
        else:
            st.warning("Veuillez remplir toutes les informations pour ajouter le test.")

if menu in ["Conduite de Balle ‚Äì Zigzag", "Conduite de Balle ‚Äì Ligne Droite"]:
    st.markdown(f"### üèÉ D√©tails du test de {menu}")
    distance = st.selectbox("Distance du parcours", ["15 m√®tres", "20 m√®tres"])
    temps_total = st.number_input("Temps total (en secondes)", min_value=0.0, max_value=30.0, step=0.1)

    if st.button("‚ûï Ajouter ce test"):
        if nom and age:
            st.session_state["tests"].append({
                "Exercice": menu,
                "Nom": nom,
                "√Çge": age,
                "Distance": distance,
                "Temps (s)": temps_total
            })
            st.success("‚úÖ Test ajout√© avec succ√®s!")
        else:
            st.warning("Veuillez remplir toutes les informations pour ajouter le test.")

# Affichage des r√©sultats
if st.session_state["tests"]:
    st.markdown("### üìä Tests enregistr√©s")
    df = pd.DataFrame(st.session_state["tests"])
    st.dataframe(df, use_container_width=True)

    if st.button("üìÑ G√©n√©rer le rapport final"):
        st.markdown(f"### üìå Rapport final pour {nom}, {age} ans")

        for exercice in df["Exercice"].unique():
            sous_df = df[df["Exercice"] == exercice]
            st.markdown(f"#### üìå {exercice}")
            st.dataframe(sous_df.drop(columns=["Nom", "√Çge", "Exercice"]))

            if exercice == "Test de Passe":
                precision_moy = sous_df["Pr√©cision (%)"].mean()
                temps_moy = sous_df["Temps moyen (s)"].mean()
                st.markdown(f"- **Pr√©cision moyenne :** {precision_moy:.1f}%")
                st.markdown(f"- **Temps moyen de r√©action :** {temps_moy:.2f} s")

                st.markdown("### üß† Analyse automatique")
                if precision_moy >= 70:
                    st.markdown("- ‚úÖ **Pr√©cision √©lev√©e** ‚Äì bon contr√¥le.")
                elif 50 <= precision_moy < 70:
                    st.markdown("- ‚ö†Ô∏è **Pr√©cision moyenne** ‚Äì am√©lioration possible.")
                else:
                    st.markdown("- ‚ùå **Faible pr√©cision** ‚Äì travailler la r√©gularit√© et la concentration.")

                if temps_moy < 4:
                    st.markdown("- ‚úÖ **R√©action rapide** ‚Äì excellente lecture du stimulus.")
                elif 4 <= temps_moy <= 6:
                    st.markdown("- ‚ö†Ô∏è **R√©action mod√©r√©e** ‚Äì √† am√©liorer.")
                else:
                    st.markdown("- ‚ùå **R√©action lente** ‚Äì s'entra√Æner sous pression r√©elle.")

                st.markdown("### üéØ Plan d'action recommand√©")

                if precision_moy < 60 or temps_moy > 6:
                    st.markdown("""
#### üü• Niveau Prioritaire ‚Äì Am√©lioration urgente

**Objectif :** Am√©liorer la pr√©cision du passe sous pression et la prise de d√©cision rapide.  
**Exercices :**
- Passe courte avec cible visuelle (Blazepod ou plots)
- Encha√Ænement contr√¥le-passe en triangle
- Jeu √† 1 touche dans un espace r√©duit
- Scanning visuel avant l'ex√©cution

**Fr√©quence :** 3 fois par semaine pendant 4 semaines  
**Objectif :** Atteindre 70% de pr√©cision en pression moyenne
                    """)
                elif 60 <= precision_moy < 70 or 4 <= temps_moy <= 6:
                    st.markdown("""
#### üü® Niveau Mod√©r√© ‚Äì Consolider les acquis

**Objectif :** Stabiliser la r√©gularit√© du passe sous pression mod√©r√©e.  
**Exercices :**
- Passe √† 2 touches avec changement d'appui
- Variation de surfaces de passe
- Travail apr√®s course courte (effort + pr√©cision)

**Fr√©quence :** 2 fois par semaine pendant 3 semaines  
**Objectif :** Maintenir au-dessus de 70% en situation r√©elle
                    """)
                else:
                    st.markdown("""
#### üü© Niveau Avanc√© ‚Äì Maintien et transfert

**Objectif :** Int√©grer la qualit√© de passe dans le jeu r√©el.  
**Exercices :**
- Jeu r√©duit avec 1 touche
- Passe en 3e homme
- Analyse vid√©o de prise d'information

**Fr√©quence :** 1 session sp√©cifique/semaine  
**Objectif :** Transfert vers les matchs
                    """)

            elif "Conduite de Balle" in exercice:
                temps_moy = sous_df["Temps (s)"].mean()
                st.markdown(f"- **Temps moyen :** {temps_moy:.2f} s")

                st.markdown("### üß† Analyse automatique")
                if temps_moy < 5:
                    st.markdown("- ‚úÖ **Excellente ma√Ætrise de balle** ‚Äì tr√®s rapide.")
                elif 5 <= temps_moy < 7:
                    st.markdown("- ‚ö†Ô∏è **Bon niveau** ‚Äì √† stabiliser.")
                else:
                    st.markdown("- ‚ùå **Temps √©lev√©** ‚Äì travailler la conduite sous pression.")

                st.markdown("### üéØ Plan d'action recommand√©")
                if temps_moy >= 7:
                    st.markdown("""
#### üü• Niveau Prioritaire ‚Äì Travail de base

**Objectif :** R√©duire le temps de conduite avec contr√¥le.  
**Exercices :**
- Slalom entre plots avec consigne de toucher le ballon tous les 2 appuis
- Travail avec Blazepod pour prise d‚Äôinformation
- Course avec changement de direction en conduite

**Fr√©quence :** 3 fois par semaine pendant 4 semaines
                    """)
                elif 5 <= temps_moy < 7:
                    st.markdown("""
#### üü® Niveau Mod√©r√© ‚Äì Stabilit√© technique

**Objectif :** Maintenir la performance dans diverses conditions.  
**Exercices :**
- Conduite apr√®s effort (ex : sortie de sprint)
- Parcours technique en zigzag avec finalisation

**Fr√©quence :** 2 fois/semaine pendant 3 semaines
                    """)
                else:
                    st.markdown("""
#### üü© Niveau Avanc√© ‚Äì Transfert au jeu

**Objectif :** Int√©grer la conduite rapide dans des situations de match.  
**Exercices :**
- Conduite dans petits espaces
- Progression sous pression avec opposition passive

**Fr√©quence :** 1 session/semaine
                    """)


